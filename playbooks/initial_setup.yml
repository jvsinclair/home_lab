---
- name: Configure BMC for Turing Pi 2 cluster
  hosts: localhost
  connection: local
  vars_prompt:
    - name: bmc_password
      prompt: "Enter the SSH password for the BMC"
      private: yes
  vars:
    bmc_host: "{{ hostvars['bmc']['ansible_host'] }}"
    bmc_hostname: "{{ hostvars['bmc']['hostname'] }}"
    bmc_fixed_ip: "{{ hostvars['bmc']['bmc_ip'] }}"
    bmc_user: "{{ hostvars['bmc']['bmc_user'] }}"
    bmc_netmask: "{{ hostvars['bmc']['bmc_netmask'] }}"
    bmc_gateway: "{{ hostvars['bmc']['bmc_gateway'] }}"
    bmc_nameservers: "{{ hostvars['bmc']['bmc_nameservers'] }}"
  tasks:
    - name: Ensure .ssh keys exists on the device
      #raw: "mkdir -p /root/.ssh && chmod 700 /root/.ssh"
      shell: ssh {{ bmc_user }}@{{ bmc_host }} 'mkdir -p /root/.ssh && echo '{{ lookup('file', '~/.ssh/id_rsa.pub') }}' >> /root/.ssh/authorized_keys && chmod 600 /root/.ssh/authorized_keys'
      delegate_to: "{{ bmc_host }}"

    - name: Render interfaces template locally
      template:
        src: templates/bmc.interfaces.j2
        dest: /tmp/interfaces

    - name: Set fixed IP for BMC via SSH using template
      shell: |
        scp /tmp/interfaces {{ bmc_user }}@{{ bmc_host }}:/etc/network/interfaces
        ssh {{ bmc_user }}@{{ bmc_host }} 'echo -e "{{ (bmc_nameservers[1:-1] | regex_replace('^\\[(.*)\\]$', '\\1') | split(',')) | map('regex_replace', '^', 'nameserver ') | join('\n') }}" > /etc/resolv.conf'
        ssh {{ bmc_user }}@{{ bmc_host }} 'echo "{{ bmc_hostname }} " > /etc/hostname'
        ssh {{ bmc_user }}@{{ bmc_host }} 'hostname {{ bmc_hostname }}'
        ssh -f {{ bmc_user }}@{{ bmc_host }} 'sleep 3; reboot'
      args:
        executable: /bin/bash
      register: set_ip_result

    - name: Wait for BMC to come back online at fixed IP
      wait_for:
        host: "{{ bmc_fixed_ip }}"
        port: 22
        state: started
        timeout: 300
        delay: 15
      vars:
        ansible_user: "{{ bmc_user }}"
        ansible_ssh_pass: "{{ bmc_password }}"

    - name: Power on all nodes via BMC using tpi command
      shell: ssh {{ bmc_user }}@{{ bmc_fixed_ip }} 'for i in 1 2 3 4; do tpi power -n $i on ; done'
      register: power_on_result
      changed_when: power_on_result.rc == 0

- name: Initial setup of Home Lab - Turing Pi 2 cluster nodes
  hosts: nodes
  gather_facts: no
  become: yes
  vars_prompt:
    - name: node_password
      prompt: "Enter the SSH password for the nodes"
      private: yes
  vars:
    ansible_ssh_pass: "{{ node_password }}"

  pre_tasks:
    - name: Wait for nodes to be online
      wait_for_connection:
        delay: 15
        timeout: 300

  tasks:
    - name: Gather facts
      ansible.builtin.setup:
        gather_subset: all

    - name: Set hostname for each node
      hostname:
        name: "{{ hostname }}"

    - name: Deploy SSH keys
      authorized_key:
        user: "{{ ansible_user }}"
        key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
        state: present

    - name: Configure passwordless sudo for ubuntu user
      lineinfile:
        path: /etc/sudoers.d/90-ubuntu-nopasswd
        line: "{{ ansible_user }} ALL=(ALL) NOPASSWD:ALL"
        create: yes
        mode: '0440'
        owner: root
        group: root
        validate: 'visudo -cf %s'

    - name: Update package cache and upgrade all packages
      apt:
        update_cache: yes
        upgrade: dist
      ignore_errors: yes

    - name: Install monitoring tools and dependencies
      package:
        name:
          - btop
          - htop
          - iftop
          - iotop
          - nvtop
        state: present

    - name: Install mDNS and discovery packages # Rasberry PI ubuntu imagesw have this but the RK1 ubuntu does not
      package:
        name:
          - avahi-daemon
          - avahi-discover
          - avahi-utils
          - libnss-mdns
          - mdns-scan
        state: present

    - name: Set static IP with Netplan
      template:
        src: templates/netplan.j2
        dest: /etc/netplan/01-netcfg.yaml
        mode: '0644'
      notify: Apply netplan

    - name: Reboot nodes to apply static IPs and hostname
      reboot:
        reboot_timeout: 300

  handlers:
    - name: Apply netplan
      command: netplan apply